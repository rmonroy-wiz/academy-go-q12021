// Code generated by mockery 2.7.4. DO NOT EDIT.

package repository

import (
	os "os"

	mock "github.com/stretchr/testify/mock"
	model "github.com/wizelineacademy/academy-go-q12021/model"
)

// MockPokemonRepository is an autogenerated mock type for the IPokemonRepository type
type MockPokemonRepository struct {
	mock.Mock
}

// CloseFile provides a mock function with given fields: file
func (_m *MockPokemonRepository) CloseFile(file *os.File) {
	_m.Called(file)
}

// GetAll provides a mock function with given fields:
func (_m *MockPokemonRepository) GetAll() ([]model.Pokemon, error) {
	ret := _m.Called()

	var r0 []model.Pokemon
	if rf, ok := ret.Get(0).(func() []model.Pokemon); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Pokemon)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByID provides a mock function with given fields: id
func (_m *MockPokemonRepository) GetByID(id int) (*model.Pokemon, error) {
	ret := _m.Called(id)

	var r0 *model.Pokemon
	if rf, ok := ret.Get(0).(func(int) *model.Pokemon); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Pokemon)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCSVDataInMemory provides a mock function with given fields:
func (_m *MockPokemonRepository) GetCSVDataInMemory() (map[int]model.Pokemon, error) {
	ret := _m.Called()

	var r0 map[int]model.Pokemon
	if rf, ok := ret.Get(0).(func() map[int]model.Pokemon); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[int]model.Pokemon)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// OpenFile provides a mock function with given fields:
func (_m *MockPokemonRepository) OpenFile() (*os.File, error) {
	ret := _m.Called()

	var r0 *os.File
	if rf, ok := ret.Get(0).(func() *os.File); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*os.File)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StoreToCSV provides a mock function with given fields: pokemonAPI
func (_m *MockPokemonRepository) StoreToCSV(pokemonAPI model.PokemonAPI) (*model.Pokemon, error) {
	ret := _m.Called(pokemonAPI)

	var r0 *model.Pokemon
	if rf, ok := ret.Get(0).(func(model.PokemonAPI) *model.Pokemon); ok {
		r0 = rf(pokemonAPI)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Pokemon)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.PokemonAPI) error); ok {
		r1 = rf(pokemonAPI)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
